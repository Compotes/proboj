#!/usr/bin/env python3
import sys
from pprint import pprint

def load_list(load_element):
    size = int(input())
    res = []
    for _ in range(size):
        res.append(load_element())
    return res

def save_list(l, save_element):
    print(len(l))
    for element in l:
        save_element(element)

class Teren:
    def __init__(self):
        self.data = None
    
    def load(self):
        load_int = lambda: int(input())
        load_list_of_int = lambda: load_list(load_int)
        self.data = load_list(load_list_of_int)
    
    def __str__(self):
        save_list(self.data, lambda x: save_list(x, print))

class Mapa:
    def __init__(self):
        self.pocet_hracov = None
        self.w = None
        self.h = None
        self.priblizny_teren = Teren()
    
    def load(self):
        self.pocet_hracov = int(input())
        self.w = int(input())
        self.h = int(input())
        self.priblizny_teren.load()
    
    def __str__(self):
        print(self.pocet_hracov)
        print(self.w)
        print(self.h)
        print(priblizny_teren)


class Stav:
    def __init__(self, hraci, manici, cas, dalsi_id):
        self.hraci = hraci
        self.manici = manici
        self.cas = cas
        self.dalsi_id = dalsi_id

    @classmethod
    def form_stdin(cls):
        hraci = load_list(lambda: int(input()))
        manici = load_list(lambda: int(input()))
        dalsi_id = int(input())
        cas = int(input())
        return Stav(hraci, manici, cas, dalsi_id)

    def __str__(self):
        return '{}\n{}\n{}\n{}\n{}\n{}'.format(
            len(self.hraci),
            '\n'.join(map(str, self.hraci)),
            len(self.manici),
            '\n'.join(map(str, self.manici)),
            self.dalsi_id,
            self.cas
        )


class Prikaz:
    def __init__(kto, typ, ciel, parameter):
        self.kto = kto
        self.typ = typ
        self.ciel = ciel
        self.parameter = parameter

    def __str__(self):
        return '{}\n{}\n{}\n{}'.format(
            self.kto,
            self.typ,
            self.ciel,
            self.parameter
        )

mapa = Mapa()
mapa.load()

print('{} {}'.format(mapa.w, mapa.h), file=sys.stderr)
for l in mapa.priblizny_teren.data:
    print(''.join(map(str,l)), file=sys.stderr)
